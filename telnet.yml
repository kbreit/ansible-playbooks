---
- name: Configure new EVE-NG router
  hosts: new_devices
  connection: local
  gather_facts: no
  tasks:
    - shell: |
        spawn telnet 172.28.43.252 {{ansible_port}}
        expect "Would you like to enter the initial configuration dialog? \[yes/no\]:"
        send "no\n"

        set send_human {.4 .4 .2 .5 100}
        send -h "\r"
        send -h "\r"
        send -h "\r"

        expect "Router>"
        send "en\n"

        expect "Router#"
        send "conf t\n"
        
        expect "Router(config)#"
        send "no service config\n"

        expect "Router(config)#"
        send "hostname {{inventory_hostname}}\n"

        expect "{{inventory_hostname}}(config)"
        send "aaa new-model\n"

        expect "{{inventory_hostname}}(config)"
        send "ip domain-name .local\n"

        expect "{{inventory_hostname}}(config)"
        send "crypto key gen rsa mod 2048\n"

        expect "1.99 has been enabled"
        send "line vty 0 4\n"

        expect "{{inventory_hostname}}(config-line)"
        send "trans in ssh\n"

        expect "{{inventory_hostname}}(config-line)"
        send "exit\n"

        expect "{{inventory_hostname}}(config)"
        send "username kbreit pass cisco\n"

        expect "{{inventory_hostname}}(config)"
        send "enable pass cisco\n"

        expect "{{inventory_hostname}}(config)"
        send "do wr me\n"

        expect "{{inventory_hostname}}(config)"
        send "do sh ip int br e0/0\n"

        expect "ethernet0"

      args:
        executable: /usr/bin/expect
      changed_when: yes
      delegate_to: localhost
      register: expect_output

    - debug:
        msg: '{{expect_output}}'

    - set_fact:
        ip_add: '{{expect_output.stdout | regex_findall("(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b)") | reject("search", "255.255.255.255") | list | last}}'

    - debug:
        msg: '{{ip_add}}'