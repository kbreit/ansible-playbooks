- name: Create new VPC and configure a Cisco CSR1000v in it
  hosts: localhost
  gather_facts: false
  # roles:
  #   - { role: cisco/csr1000v/create}
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: csr1kv_vpc
        state: present
        region: us-east-2
        dns_support: True
        dns_hostnames: True
        cidr_block: 10.0.0.0/16
      register: vpc

    - name: Create VPC subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: '{{vpc.vpc.id}}'
        cidr: 10.0.1.0/24
        region: us-east-2
        map_public: True
        az: us-east-2a
      register: vpc_subnet

    - name: Create VPC Internet Gateway
      ec2_vpc_igw:
        region: us-east-2
        state: present
        vpc_id: '{{vpc.vpc.id}}'
      register: vpc_igw

    - name: Set routing table with default route
      ec2_vpc_route_table:
        state: present
        vpc_id: '{{vpc.vpc.id}}'
        subnets: '{{vpc_subnet.subnet.id}}'
        region: us-east-2
        routes:
          - dest: 0.0.0.0/0
            gateway_id: '{{vpc_igw.gateway_id}}'
      register: vpc_route_table

    - name: Create security group
      ec2_group:
        description: Security group for CSR1000v routers
        name: csr1kvSG
        region: us-east-2
        vpc_id: '{{vpc.vpc.id}}'
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: sg

    - name: Create CSR1000v instance
      ec2:
        instance_type: t2.medium
        region: us-east-2
        image: ami-b61437d3
        key_name: work-prod-keypair
        source_dest_check: no
        group_id: '{{sg.group_id}}'
        vpc_subnet_id: '{{ vpc_subnet.subnet.id }}'
        wait: yes
        zone: us-east-2a
        instance_tags:
          function: csr1000v
          name: csr1000v
          billingGroup: Work
      register: csr1000v_instance

    - name: Get CSR1000v instance facts
      ec2_instance_facts:
        region: us-east-2
        instance_ids: '{{csr1000v_instance.instance_ids}}'
      register: csr_facts

    - name: Create Elastic IP for CSR1000v interface
      ec2_eip:
        state: present
        region: us-east-2
        in_vpc: True
        device_id: '{{csr_facts.instances.0.network_interfaces.0.network_interface_id}}'
      register: eip

    - name: Register Elastic IP with Route 53
      route53:
        state: create
        zone: kb-lab.net
        record: csr1kv.kb-lab.net
        value: '{{ eip.public_ip }}'
        overwrite: yes
        type: A
        wait: yes
      register: route53_record

    - name: Wait for SSH access on router
      wait_for:
        host: csr1kv.kb-lab.net
        port: 22
        state: started
        timeout: 600
