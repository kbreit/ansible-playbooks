- name: Create docker instances in EC2
  hosts: localhost
  connection: local
  remote_user: ec2-user
  gather_facts: False
  tasks:
    - name: Create EC2 instance for docker
      local_action:
        module: ec2
        key_name: "{{ key_name }}"
        region: "{{ aws_region }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami_id }}"
        group: dockerSG
        wait: yes
        count: 3
        vpc_subnet_id: "{{ subnet_id }}"
        assign_public_ip: yes
        instance_tags:
          function: docker
      register: ec2

    # - name: Debug
    #   debug: 
    #     msg: "{{ ec2.instances.0.public_dns_name }}"

    - name: Add host to group
      add_host:
        name: "{{ item.private_dns_name }}"
        groups: ec2_docker_instances
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH
      wait_for:
        host: "{{ item.private_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ec2.instances}}"

- name: Configure EC2 instances
  hosts: ec2_docker_instances
  remote_user: ec2-user
  tasks:
    - name: Install RPM Python bindings
      become: yes
      raw: yum install rpm-python -y

    - name: Update all software
      become: yes
      yum:
        update_cache: yes
        name: "*"
        state: latest

    - name: Install Docker software
      become: yes
      yum:
        name: docker
        state: latest

    - name: Add ec2-user to docker group
      become: yes
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Enable docker to start by default
      become: yes
      service:
        name: docker
        state: started

    - name: Enable docker to start by default
      become: yes
      service:
        name: docker
        state: started